# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T10:52:21+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import AnyUrl, BaseModel, Field, constr


class AccountsV1AuthTokenPromotion(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the secondary Auth Token was created for.',
    )
    auth_token: Optional[str] = Field(
        None,
        description='The promoted Auth Token that must be used to authenticate future API requests.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in UTC when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    url: Optional[AnyUrl] = Field(
        None,
        description='The URI for this resource, relative to `https://accounts.twilio.com`',
    )


class AccountsV1Credential(BaseModel):
    pass


class AccountsV1CredentialCredentialAws(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AWS resource.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.',
    )
    friendly_name: Optional[str] = Field(
        None, description='The string that you assigned to describe the resource.'
    )
    sid: Optional[
        constr(pattern=r'^CR[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that we created to identify the AWS resource.',
    )
    url: Optional[AnyUrl] = Field(
        None,
        description='The URI for this resource, relative to `https://accounts.twilio.com`',
    )


class AccountsV1CredentialCredentialPublicKey(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Credential that the PublicKey resource belongs to.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.',
    )
    friendly_name: Optional[str] = Field(
        None, description='The string that you assigned to describe the resource.'
    )
    sid: Optional[
        constr(pattern=r'^CR[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The unique string that that we created to identify the PublicKey resource.',
    )
    url: Optional[AnyUrl] = Field(
        None,
        description='The URI for this resource, relative to `https://accounts.twilio.com`',
    )


class AccountsV1SecondaryAuthToken(BaseModel):
    account_sid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the secondary Auth Token was created for.',
    )
    date_created: Optional[datetime] = Field(
        None,
        description='The date and time in UTC when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    date_updated: Optional[datetime] = Field(
        None,
        description='The date and time in UTC when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.',
    )
    secondary_auth_token: Optional[str] = Field(
        None,
        description='The generated secondary Auth Token that can be used to authenticate future API requests.',
    )
    url: Optional[AnyUrl] = Field(
        None,
        description='The URI for this resource, relative to `https://accounts.twilio.com`',
    )


class Meta(BaseModel):
    first_page_url: Optional[AnyUrl] = None
    key: Optional[str] = None
    next_page_url: Optional[AnyUrl] = None
    page: Optional[int] = None
    page_size: Optional[int] = None
    previous_page_url: Optional[AnyUrl] = None
    url: Optional[AnyUrl] = None


class V1CredentialsAWSGetResponse(BaseModel):
    credentials: Optional[List[AccountsV1CredentialCredentialAws]] = None
    meta: Optional[Meta] = None


class V1CredentialsAWSPostRequest(BaseModel):
    AccountSid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Subaccount that this Credential should be associated with. Must be a valid Subaccount of the account issuing the request.',
    )
    Credentials: str = Field(
        ...,
        description='A string that contains the AWS access credentials in the format `<AWS_ACCESS_KEY_ID>:<AWS_SECRET_ACCESS_KEY>`. For example, `AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`',
    )
    FriendlyName: Optional[str] = Field(
        None,
        description='A descriptive string that you create to describe the resource. It can be up to 64 characters long.',
    )


class V1CredentialsAWSSidPostRequest(BaseModel):
    FriendlyName: Optional[str] = Field(
        None,
        description='A descriptive string that you create to describe the resource. It can be up to 64 characters long.',
    )


class V1CredentialsPublicKeysGetResponse(BaseModel):
    credentials: Optional[List[AccountsV1CredentialCredentialPublicKey]] = None
    meta: Optional[Meta] = None


class V1CredentialsPublicKeysPostRequest(BaseModel):
    AccountSid: Optional[
        constr(pattern=r'^AC[0-9a-fA-F]{32}$', min_length=34, max_length=34)
    ] = Field(
        None,
        description='The SID of the Subaccount that this Credential should be associated with. Must be a valid Subaccount of the account issuing the request',
    )
    FriendlyName: Optional[str] = Field(
        None,
        description='A descriptive string that you create to describe the resource. It can be up to 64 characters long.',
    )
    PublicKey: str = Field(
        ...,
        description='A URL encoded representation of the public key. For example, `-----BEGIN PUBLIC KEY-----MIIBIjANB.pa9xQIDAQAB-----END PUBLIC KEY-----`',
    )


class V1CredentialsPublicKeysSidPostRequest(BaseModel):
    FriendlyName: Optional[str] = Field(
        None,
        description='A descriptive string that you create to describe the resource. It can be up to 64 characters long.',
    )
